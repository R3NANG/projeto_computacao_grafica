/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package panels;

import java.awt.event.ItemEvent;
import java.awt.Graphics;
import java.awt.Color;
import javax.swing.ImageIcon;
import panels.PanelBoard;
import panels.PencilPanel;
import transformations.Matrix;
import math.Polygon;
import math.PolygonType;
import transformations.Transformation2D;

/**
 *
 * @author Renan
 */
public class PanelImageFilters extends javax.swing.JInternalFrame {
    private int assistantX = 0, assistantY = 0;
    private Polygon polygon = new Polygon(PolygonType.TRANSFORMATION2D);
    private PanelBoard panelBoard;
    private Transformation2D transformation2D = new Transformation2D();
    
    public void setPolygon(Polygon polygon) {
        this.polygon = polygon;
    }

    public void setPanelBoard(PanelBoard panelBoard) {
        this.panelBoard = panelBoard;
        this.panelBoard.setPolygon(this.polygon);
        this.panelBoard.setPencil(new PencilPanel(){
            @Override
            public void draw (PanelBoard board, Graphics g) {
                g.setColor(Color.black);
                // Draw N polygon
                for (int i = 0; i < board.getPolygon().getSize(); i++)
                {
                    if (i == board.getPolygon().getSize() - 1) {
                            g.drawLine(
                                    board.getCenterX() + (int)board.getPolygon().getPolygon()[0][i],
                                    board.getCenterY() - (int)board.getPolygon().getPolygon()[1][i],
                                    board.getCenterX() + (int)board.getPolygon().getPolygon()[0][0],
                                    board.getCenterY() - (int)board.getPolygon().getPolygon()[1][0]);
                            continue;
                    }
                    g.drawLine(
                            board.getCenterX() + (int)board.getPolygon().getPolygon()[0][i],
                            board.getCenterY() - (int)board.getPolygon().getPolygon()[1][i],
                            board.getCenterX() + (int)board.getPolygon().getPolygon()[0][i+1],
                            board.getCenterY() - (int)board.getPolygon().getPolygon()[1][i+1]);
                }
            }
        });
    }

    /**
     * Creates new form PanelImageFilters
     */
    public PanelImageFilters() {
        initComponents();
        
        transformacoesComboBox.removeAllItems();
        transformacoesComboBox.addItem("Media");
        transformacoesComboBox.addItem("Mediana");
        transformacoesComboBox.addItem("Passa alta basico");
        transformacoesComboBox.addItem("Operador de Roberts");
        transformacoesComboBox.addItem("Operador de Roberts Cruzado");
        transformacoesComboBox.addItem("Operador de Prewitt");
        transformacoesComboBox.addItem("Alto Reforco (Hight-Boost)");
        transformacoesComboBox.addItem("Operador de Sobel");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        transformacoesComboBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        aplicarNoObjetoButton = new javax.swing.JButton();

        setClosable(true);
        setTitle("Filtros de Imagem");

        transformacoesComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        transformacoesComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                transformacoesComboBoxItemStateChanged(evt);
            }
        });
        transformacoesComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transformacoesComboBoxActionPerformed(evt);
            }
        });

        jLabel1.setText("Filtros de Imagem");

        aplicarNoObjetoButton.setText("Aplicar no Objeto");
        aplicarNoObjetoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aplicarNoObjetoButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(aplicarNoObjetoButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(transformacoesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(224, 496, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(transformacoesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(aplicarNoObjetoButton)
                .addContainerGap(271, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void transformacoesComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transformacoesComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_transformacoesComboBoxActionPerformed

    private void transformacoesComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_transformacoesComboBoxItemStateChanged
        // TODO add your handling code here:
        if(evt.getStateChange() == ItemEvent.SELECTED && transformacoesComboBox.getSelectedItem().equals("Media")) {
            
        } else if(evt.getStateChange() == ItemEvent.SELECTED && transformacoesComboBox.getSelectedItem().equals("Mediana")) {
            
        } else if(evt.getStateChange() == ItemEvent.SELECTED && transformacoesComboBox.getSelectedItem().equals("Passa alta basico")) {
            
        } else if(evt.getStateChange() == ItemEvent.SELECTED && transformacoesComboBox.getSelectedItem().equals("Operador de Roberts")) {
            
        } else if(evt.getStateChange() == ItemEvent.SELECTED && transformacoesComboBox.getSelectedItem().equals("Operador de Roberts Cruzado")) {
            
        } else if(evt.getStateChange() == ItemEvent.SELECTED && transformacoesComboBox.getSelectedItem().equals("Operador de Prewitt")) {
            
        } else if(evt.getStateChange() == ItemEvent.SELECTED && transformacoesComboBox.getSelectedItem().equals("Alto Reforco (Hight-Boost)")) {
            
        } else if(evt.getStateChange() == ItemEvent.SELECTED && transformacoesComboBox.getSelectedItem().equals("Operador de Sobel")) {
            
        }
    }//GEN-LAST:event_transformacoesComboBoxItemStateChanged

    private void aplicarNoObjetoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aplicarNoObjetoButtonActionPerformed
        // TODO add your handling code here:
        if(transformacoesComboBox.getSelectedItem().equals("Media")) {
            
        } else if(transformacoesComboBox.getSelectedItem().equals("Mediana")) {

        } else if(transformacoesComboBox.getSelectedItem().equals("Passa alta basico")) {

        } else if(transformacoesComboBox.getSelectedItem().equals("Operador de Roberts")) {

        } else if(transformacoesComboBox.getSelectedItem().equals("Operador de Roberts Cruzado")) {

        } else if(transformacoesComboBox.getSelectedItem().equals("Operador de Prewitt")) {

        } else if(transformacoesComboBox.getSelectedItem().equals("Alto Reforco (Hight-Boost)")) {

        } else if(transformacoesComboBox.getSelectedItem().equals("Operador de Sobel")) {

        }
    }//GEN-LAST:event_aplicarNoObjetoButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aplicarNoObjetoButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JComboBox<String> transformacoesComboBox;
    // End of variables declaration//GEN-END:variables
}
