/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package panels;

import java.awt.event.ItemEvent;
import java.awt.Graphics;
import java.awt.Color;
import math.Polygon;
import math.PolygonType;
import java.util.Stack;
import math.Matrix;
import static math.Matrix.composed;
import transformations.Transformation2D;

/**
 *
 * @author Renan
 */
public class Panel2D extends javax.swing.JInternalFrame {
    private int assistantX = 0, assistantY = 0, assistantZ = 0, assistantW = 0;
    private Polygon polygon = new Polygon(PolygonType.TRANSFORMATION2D);
    private PanelBoard panelBoard;
    private Transformation2D transformation2D = new Transformation2D();
    Stack<double[][]> compositeTransformations = new Stack<double[][]>();
    
    public void setPolygon(Polygon polygon) {
        this.polygon = polygon;
    }

    public void setPanelBoard(PanelBoard panelBoard) {
        this.panelBoard = panelBoard;
        this.panelBoard.setPolygon(this.polygon);
        this.panelBoard.setPencil(new PencilPanel(){
            @Override
            public void draw (PanelBoard board, Graphics g) {
                // Axis X
                g.setColor(Color.red);
                g.drawLine(0, board.getCenterY(), board.getWidth(), board.getCenterY());

                // Axis Y
                g.setColor(Color.green);
                g.drawLine(board.getCenterX(), 0, board.getCenterX(), board.getHeight());

                g.setColor(Color.black);
                // Draw N polygon
                for (int i = 0; i < board.getPolygon().getSize(); i++)
                {
                    if (i == board.getPolygon().getSize() - 1) {
                            g.drawLine(
                                    (int)board.getCenterX() + (int)board.getPolygon().getPolygon()[0][i],
                                    (int)board.getCenterY() - (int)board.getPolygon().getPolygon()[1][i],
                                    (int)board.getCenterX() + (int)board.getPolygon().getPolygon()[0][0],
                                    (int)board.getCenterY() - (int)board.getPolygon().getPolygon()[1][0]);
                            continue;
                    }
                    g.drawLine(
                            (int)board.getCenterX() + (int)board.getPolygon().getPolygon()[0][i],
                            (int)board.getCenterY() - (int)board.getPolygon().getPolygon()[1][i],
                            (int)board.getCenterX() + (int)board.getPolygon().getPolygon()[0][i+1],
                            (int)board.getCenterY() - (int)board.getPolygon().getPolygon()[1][i+1]);
                }
            }
        });
        /*
        this.panelBoard.addMouseListener (new MouseAdapter() {
            @Override 
            public void mousePressed(MouseEvent e) {
                //polygon.insert2D(e.getX(), e.getY());
                polygon.insert2D((int)point[0][0], (int)point[1][0]);
                panelBoard.repaint();
            }
        });   
        */
    }

    /**
     * Creates new form Panel2D
     */
    public Panel2D() {
        initComponents();
        
        transformacoesComboBox.removeAllItems();
        transformacoesComboBox.addItem("Translation");
        transformacoesComboBox.addItem("Scaling");
        transformacoesComboBox.addItem("Rotation");
        transformacoesComboBox.addItem("Reflection");
        transformacoesComboBox.addItem("Shear");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        emYLabel = new javax.swing.JLabel();
        x = new javax.swing.JTextField();
        desenharObjetoButton = new javax.swing.JButton();
        aplicarNoObjetoButton = new javax.swing.JButton();
        y = new javax.swing.JTextField();
        transformacoesComboBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        alturaText = new javax.swing.JTextField();
        emXLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        larguraText = new javax.swing.JTextField();
        emXText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        emYText = new javax.swing.JTextField();
        resetButton = new javax.swing.JButton();
        addComposicaoButton = new javax.swing.JButton();
        rodarComposicaoButton = new javax.swing.JButton();

        setClosable(true);
        setTitle("Transformações 2D");

        emYLabel.setText("Em Y:");

        x.setText("0");
        x.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xActionPerformed(evt);
            }
        });

        desenharObjetoButton.setText("Desenhar Objeto");
        desenharObjetoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                desenharObjetoButtonActionPerformed(evt);
            }
        });

        aplicarNoObjetoButton.setText("Aplicar no Objeto");
        aplicarNoObjetoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aplicarNoObjetoButtonActionPerformed(evt);
            }
        });

        y.setText("0");
        y.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yActionPerformed(evt);
            }
        });

        transformacoesComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        transformacoesComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                transformacoesComboBoxItemStateChanged(evt);
            }
        });
        transformacoesComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transformacoesComboBoxActionPerformed(evt);
            }
        });

        jLabel1.setText("Objeto 2D");

        jLabel6.setText("Y:");

        jLabel2.setText("Altura:");

        jLabel5.setText("Transformações 2D");

        alturaText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alturaTextActionPerformed(evt);
            }
        });

        emXLabel.setText("Em X:");

        jLabel3.setText("Largura:");

        larguraText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                larguraTextActionPerformed(evt);
            }
        });

        emXText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emXTextActionPerformed(evt);
            }
        });

        jLabel4.setText("X:");

        emYText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emYTextActionPerformed(evt);
            }
        });

        resetButton.setText("Resetar");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        addComposicaoButton.setText("Add na Composição");
        addComposicaoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addComposicaoButtonActionPerformed(evt);
            }
        });

        rodarComposicaoButton.setText("Rodar Composição");
        rodarComposicaoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rodarComposicaoButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(desenharObjetoButton)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(alturaText, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel3))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(x, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel6)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(y, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(larguraText, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(transformacoesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(emXLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(emXText, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(emYLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(emYText, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addComposicaoButton)
                                    .addComponent(aplicarNoObjetoButton)
                                    .addComponent(rodarComposicaoButton))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap(21, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(resetButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(alturaText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(larguraText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(x, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(y, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addComponent(desenharObjetoButton)
                .addGap(31, 31, 31)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(transformacoesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emXLabel)
                    .addComponent(emXText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emYLabel)
                    .addComponent(emYText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(aplicarNoObjetoButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addComposicaoButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rodarComposicaoButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(resetButton)
                .addGap(43, 43, 43))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void xActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_xActionPerformed

    private void desenharObjetoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_desenharObjetoButtonActionPerformed
        assistantZ = Integer.parseInt(alturaText.getText());
        assistantW = Integer.parseInt(larguraText.getText());
        assistantX = Integer.parseInt(x.getText());
        assistantY = Integer.parseInt(y.getText());


        polygon.insert2D(assistantX, assistantY);
        polygon.insert2D(assistantX, assistantZ);
        polygon.insert2D(assistantW, assistantZ);
        polygon.insert2D(assistantW, assistantY);
        panelBoard.repaint();

    }//GEN-LAST:event_desenharObjetoButtonActionPerformed

    private void aplicarNoObjetoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aplicarNoObjetoButtonActionPerformed
        // TODO add your handling code here:
        if(transformacoesComboBox.getSelectedItem().equals("Translation")) {
            assistantX = Integer.parseInt(emXText.getText());
            assistantY = Integer.parseInt(emYText.getText());
            
            polygon.setPolygon(transformation2D.translation(polygon.getPolygon(), assistantX, assistantY));
            panelBoard.repaint();
        } else if(transformacoesComboBox.getSelectedItem().equals("Scaling")) {
            assistantX = Integer.parseInt(emXText.getText());
            assistantY = Integer.parseInt(emYText.getText());

            polygon.setPolygon(transformation2D.scaling(polygon.getPolygon(), assistantX, assistantY));
            panelBoard.repaint();
        } else if(transformacoesComboBox.getSelectedItem().equals("Rotation")) {
            assistantX = Integer.parseInt(emXText.getText());

            polygon.setPolygon(transformation2D.rotation(polygon.getPolygon(), assistantX));
            panelBoard.repaint();
        } else if(transformacoesComboBox.getSelectedItem().equals("Reflection")) {
            polygon.setPolygon(transformation2D.reflection(polygon.getPolygon(), emXText.getText()));
            panelBoard.repaint();
        } else if(transformacoesComboBox.getSelectedItem().equals("Shear")) {
            assistantX = Integer.parseInt(emXText.getText());
            assistantY = Integer.parseInt(emYText.getText());

            polygon.setPolygon(transformation2D.shear(polygon.getPolygon(), assistantX, assistantY));
            panelBoard.repaint();
        }
    }//GEN-LAST:event_aplicarNoObjetoButtonActionPerformed

    private void yActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yActionPerformed

    private void transformacoesComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transformacoesComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_transformacoesComboBoxActionPerformed

    private void alturaTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alturaTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_alturaTextActionPerformed

    private void larguraTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_larguraTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_larguraTextActionPerformed

    private void emXTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emXTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emXTextActionPerformed

    private void emYTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emYTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emYTextActionPerformed

    private void transformacoesComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_transformacoesComboBoxItemStateChanged
        // TODO add your handling code here:
        if(evt.getStateChange() == ItemEvent.SELECTED && transformacoesComboBox.getSelectedItem().equals("Translation")) {
            emXLabel.setText("Em X:");
            emXLabel.setVisible(true);
            emXText.setVisible(true);
            emYLabel.setText("Em Y:");
            emYLabel.setVisible(true);
            emYText.setVisible(true);
        } else if(evt.getStateChange() == ItemEvent.SELECTED && transformacoesComboBox.getSelectedItem().equals("Scaling")) {
            emXLabel.setText("Em X:");
            emXLabel.setVisible(true);
            emXText.setVisible(true);
            emYLabel.setText("Em Y:");
            emYLabel.setVisible(true);
            emYText.setVisible(true);
        } else if(evt.getStateChange() == ItemEvent.SELECTED && transformacoesComboBox.getSelectedItem().equals("Rotation")) {
            emXLabel.setText("Rotação:");
            emXLabel.setVisible(true);
            emXText.setVisible(true);
            emYLabel.setText("Em Y:");
            emYLabel.setVisible(false);
            emYText.setVisible(false);
        } else if(evt.getStateChange() == ItemEvent.SELECTED && transformacoesComboBox.getSelectedItem().equals("Reflection")) {
            emXLabel.setText("Reflexão:");
            emXLabel.setVisible(true);
            emXText.setVisible(true);
            emYLabel.setText("(X, Y, O)");
            emYLabel.setVisible(true);
            emYText.setVisible(false);
        } else if(evt.getStateChange() == ItemEvent.SELECTED && transformacoesComboBox.getSelectedItem().equals("Shear")) {
            emXLabel.setText("Em X:");
            emXLabel.setVisible(true);
            emXText.setVisible(true);
            emYLabel.setText("Em Y:");
            emYLabel.setVisible(true);
            emYText.setVisible(true);
        }
    }//GEN-LAST:event_transformacoesComboBoxItemStateChanged

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        // TODO add your handling code here:
        polygon.reset2D();
        panelBoard.repaint();
    }//GEN-LAST:event_resetButtonActionPerformed

    private void addComposicaoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addComposicaoButtonActionPerformed
        // TODO add your handling code here:
        if(transformacoesComboBox.getSelectedItem().equals("Translation")) {
            assistantX = Integer.parseInt(emXText.getText());
            assistantY = Integer.parseInt(emYText.getText());
            
            compositeTransformations.push(Matrix.translationMatrix2D(assistantX, assistantY));
        } else if(transformacoesComboBox.getSelectedItem().equals("Scaling")) {
            assistantX = Integer.parseInt(emXText.getText());
            assistantY = Integer.parseInt(emYText.getText());

            compositeTransformations.push(Matrix.scalingMatrix2D(assistantX, assistantY));
        } else if(transformacoesComboBox.getSelectedItem().equals("Rotation")) {
            assistantX = Integer.parseInt(emXText.getText());

            compositeTransformations.push(Matrix.rotationMatrix2D(assistantX));
        } else if(transformacoesComboBox.getSelectedItem().equals("Reflection")) {
            compositeTransformations.push(Matrix.reflectionMatrix2D(emXText.getText()));
            
        } else if(transformacoesComboBox.getSelectedItem().equals("Shear")) {
            assistantX = Integer.parseInt(emXText.getText());
            assistantY = Integer.parseInt(emYText.getText());

            compositeTransformations.push(Matrix.shearMatrix2D(assistantX, assistantY));
        }
    }//GEN-LAST:event_addComposicaoButtonActionPerformed

    private void rodarComposicaoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rodarComposicaoButtonActionPerformed
        // TODO add your handling code here:
        polygon.setPolygon(composed(compositeTransformations, polygon.getPolygon()));
        panelBoard.repaint();
    }//GEN-LAST:event_rodarComposicaoButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addComposicaoButton;
    private javax.swing.JTextField alturaText;
    private javax.swing.JButton aplicarNoObjetoButton;
    private javax.swing.JButton desenharObjetoButton;
    private javax.swing.JLabel emXLabel;
    private javax.swing.JTextField emXText;
    private javax.swing.JLabel emYLabel;
    private javax.swing.JTextField emYText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField larguraText;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton rodarComposicaoButton;
    private javax.swing.JComboBox<String> transformacoesComboBox;
    private javax.swing.JTextField x;
    private javax.swing.JTextField y;
    // End of variables declaration//GEN-END:variables
}
