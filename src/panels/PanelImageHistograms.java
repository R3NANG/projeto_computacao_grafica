/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package panels;

import imageprocessing.Normalization;
import java.awt.event.ItemEvent;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Color;
import javax.swing.ImageIcon;
import java.awt.image.BufferedImage;
import java.awt.Image;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JInternalFrame;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.imageio.ImageIO;
import java.net.URL;


import panels.PanelImageHistograms;
import panels.PanelImage;

import imageprocessing.filters.Filter;
import imageprocessing.operators.Operator;
import imageprocessing.transformations.Histogram;

/**
 *
 * @author Renan
 */
public class PanelImageHistograms extends javax.swing.JInternalFrame {
    private BufferedImage image, image2;
    private BufferedImage imageResult, imageResult2;
    private int[][] imageMatrix;
    private int[][] imageMatrix1;
    private int[][] imageMatrix2; 
    private int imgWidth;
    private int imgHeight;
    private int imgValorMaximo;

    /*
    public void setPanelImageInput(PanelImage panel) {
        this.panelImageInput = panel;
    }
    */
    /**
     * Creates new form PanelImageOperations
     */
    public PanelImageHistograms() {
        initComponents();
        
        panelImageOriginal.setBackground(Color.GRAY);
        panelImageEqualized.setBackground(Color.GRAY);
        panelOriginalHistogram.setBackground(Color.GRAY);
        panelEqualizedHistogram.setBackground(Color.GRAY);
    }

    @Override
    public void paint(Graphics g) {
        super.paint(g);
        g.drawImage(image, 250, 50, null);
        //g.drawImage(image2, 550, 50, null);
        //g.drawImage(imageResult, 380, 420, null);

        //panelImageResult.getGraphics().drawImage(imageResult, 320, 50, null);
    }

    /*
    @Override
    public void paint(Graphics g) {
        super.paint(g);
        panelImageOriginal.getGraphics().drawImage(image, 0, 0, null);
        panelImageOriginal.repaint();

    }
    */
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        aplicarNaImagemButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        panelImageOriginal = new javax.swing.JPanel();
        selecionarImgButton = new javax.swing.JButton();
        panelImageEqualized = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        panelOriginalHistogram = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        panelEqualizedHistogram = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Histograma");
        setPreferredSize(new java.awt.Dimension(890, 700));

        aplicarNaImagemButton.setText("Aplicar na Imagem");
        aplicarNaImagemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aplicarNaImagemButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Selecionar Imagem");

        panelImageOriginal.setPreferredSize(new java.awt.Dimension(300, 300));

        javax.swing.GroupLayout panelImageOriginalLayout = new javax.swing.GroupLayout(panelImageOriginal);
        panelImageOriginal.setLayout(panelImageOriginalLayout);
        panelImageOriginalLayout.setHorizontalGroup(
            panelImageOriginalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
        panelImageOriginalLayout.setVerticalGroup(
            panelImageOriginalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        selecionarImgButton.setText("Selecionar");
        selecionarImgButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selecionarImgButtonActionPerformed(evt);
            }
        });

        panelImageEqualized.setPreferredSize(new java.awt.Dimension(300, 300));

        javax.swing.GroupLayout panelImageEqualizedLayout = new javax.swing.GroupLayout(panelImageEqualized);
        panelImageEqualized.setLayout(panelImageEqualizedLayout);
        panelImageEqualizedLayout.setHorizontalGroup(
            panelImageEqualizedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
        panelImageEqualizedLayout.setVerticalGroup(
            panelImageEqualizedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jLabel3.setText("Imagem Original");

        jLabel4.setText("Imagem Equalizada");

        panelOriginalHistogram.setPreferredSize(new java.awt.Dimension(300, 300));

        javax.swing.GroupLayout panelOriginalHistogramLayout = new javax.swing.GroupLayout(panelOriginalHistogram);
        panelOriginalHistogram.setLayout(panelOriginalHistogramLayout);
        panelOriginalHistogramLayout.setHorizontalGroup(
            panelOriginalHistogramLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
        panelOriginalHistogramLayout.setVerticalGroup(
            panelOriginalHistogramLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jLabel6.setText("Histograma da Imagem Original");

        panelEqualizedHistogram.setPreferredSize(new java.awt.Dimension(300, 300));

        javax.swing.GroupLayout panelEqualizedHistogramLayout = new javax.swing.GroupLayout(panelEqualizedHistogram);
        panelEqualizedHistogram.setLayout(panelEqualizedHistogramLayout);
        panelEqualizedHistogramLayout.setHorizontalGroup(
            panelEqualizedHistogramLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
        panelEqualizedHistogramLayout.setVerticalGroup(
            panelEqualizedHistogramLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jLabel7.setText("(esquerda)");

        jLabel8.setText("(direita)");

        jLabel9.setText("Histograma da Imagem Equalizada");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(41, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 13, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(selecionarImgButton))
                                .addGap(74, 74, 74))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(aplicarNaImagemButton, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(56, 56, 56)
                                        .addComponent(jLabel8)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(jLabel7))
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelOriginalHistogram, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(panelEqualizedHistogram, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelImageOriginal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(panelImageEqualized, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(38, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(229, 229, 229)
                .addComponent(jLabel4)
                .addGap(139, 139, 139))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelImageEqualized, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelImageOriginal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(selecionarImgButton)
                        .addGap(18, 18, 18)
                        .addComponent(aplicarNaImagemButton)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(panelEqualizedHistogram, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panelOriginalHistogram, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addGap(32, 32, 32)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addGap(145, 145, 145))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void aplicarNaImagemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aplicarNaImagemButtonActionPerformed
        // TODO add your handling code here:
        this.imageMatrix2 = Histogram.equalize(imageMatrix);
        this.imageResult = Normalization.matrixToBufferedImage(imageMatrix2);
        this.getGraphics().drawImage(imageResult, 570, 50, null);
        this.imageResult = Histogram.graph(imageMatrix);
        this.getGraphics().drawImage(imageResult, 260, 420, null);
        this.imageResult = Histogram.graph(imageMatrix2);
        this.getGraphics().drawImage(imageResult, 580, 420, null);
    }//GEN-LAST:event_aplicarNaImagemButtonActionPerformed

    private void selecionarImgButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selecionarImgButtonActionPerformed
        // TODO add your handling code here:
        try {
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setCurrentDirectory(new File("src/images/"));
            FileNameExtensionFilter filter = new FileNameExtensionFilter("PGM Images", "pgm");
            fileChooser.setFileFilter(filter);
            int returnVal = fileChooser.showOpenDialog(aplicarNaImagemButton);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                //imageMatrix1 = createImage(fileChooser.getSelectedFile());
                //populaImgInPanel(imageMatrix1, panelImageOriginal);
               // createImage(fileChooser.getSelectedFile());
               
                File path = fileChooser.getSelectedFile();
                System.out.println(path);
                createImage(path.getAbsolutePath());
                //btAplicaFiltro.setEnabled(true);
                //panelImgOutput.repaint();
                //panelImageOriginal.setImage(imgT);

                //panelImageInput.setImage(image);
                //panelImageInput.repaint();

                //panelImageOriginal.getGraphics().drawImage(image, 0, 0, null);
                //panelImageOriginal.repaint();
                this.repaint();
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "OPS! N�o foi possivel carregar a imagem.");
        }
    }//GEN-LAST:event_selecionarImgButtonActionPerformed

    /**
     *  Ler o arquivo pgm e monta a popula a matriz imagem
     */
    public int[][] createImage(String path) {
        /*
        FileInputStream fileInputStream = null;
        Scanner scan = null;
        try {
            fileInputStream = new FileInputStream(file);
            scan = new Scanner(fileInputStream);
        } catch (FileNotFoundException ex) {
            //Logger.getLogger(PanelOperacoes.class.getName()).log(Level.SEVERE, null, ex);
        }

        // Descarta a primeira linha
        scan.nextLine();
        // Read pic width, height and max value
        imgWidth = scan.nextInt();
        imgHeight = scan.nextInt();
        imgValorMaximo = scan.nextInt();
        */ 
        //BufferedImage bimg = null;
        int width;
        int height;

        InputStream inputStream = null;
        Scanner scan = null;
        try {

            System.out.println(path);
            inputStream = new FileInputStream(path);
            scan = new Scanner(inputStream);

            // Descarta a primeira linha
            scan.nextLine();
            // Read pic width, height and max value
            width = scan.nextInt();
            height = scan.nextInt();
            imgValorMaximo = scan.nextInt();

            BufferedImage bimg = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
            System.out.printf ("W : %d\n", width);
            System.out.printf ("H : %d\n", height);

            //width = i.getWidth();
            //height = i.getHeight();
            /*
            if (path == null)
                System.out.println("File Null");
            if (inputStream == null) 
                System.out.println("input Null");
            if (bimg == null)
                System.out.println("bimg Null");

            width = bimg.getWidth();
            height = bimg.getHeight();
            */
            //this.image = bimg;

            /**
            * Monta a matriz imagem com os pixels da imagem selecionada
            */
            imageMatrix = new int[width][height];

            for (int row = 0; row < height; row++) {
                for (int col = 0; col < width; col++) {
                    // Popula a matriz com os pixels da imagem
                    imageMatrix[row][col] = scan.nextInt();
                }
            }
            inputStream.close();

            /**
            * Monta a matriz imagem com os pixels da imagem selecionada
            */
            for (int row = 0; row < height; row++) {
                for (int col = 0; col < width; col++) {
                    // Prepara a imagem para ser desenhada no jpanel
                    bimg.setRGB(col, row, getCorPixel(imageMatrix[row][col]));
                }
            }

            this.image = bimg;


        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "OPS! criar a imagem.");
        }


        /*
        try {
            fileInputStream.close();
        } catch (IOException ex) {
            //Logger.getLogger(PanelOperacoes.class.getName()).log(Level.SEVERE, null, ex);
        }
        */
        return imageMatrix;
    }
    
    

    /**
     * Exibe a imagem no jPanel
     *
     */

    /**
     * Retorna o valor em RGB de acordo com o valor do pixel
     */
    private int getCorPixel(int corRGB) {
        return new Color(corRGB, corRGB, corRGB).getRGB();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aplicarNaImagemButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel panelEqualizedHistogram;
    private javax.swing.JPanel panelImageEqualized;
    private javax.swing.JPanel panelImageOriginal;
    private javax.swing.JPanel panelOriginalHistogram;
    private javax.swing.JButton selecionarImgButton;
    // End of variables declaration//GEN-END:variables
}
